---
swagger: "2.0"
info:
  description: "Kill Bill is an open-source billing and payments platform"
  version: "0.23.0-SNAPSHOT"
  title: "Kill Bill"
  contact:
    name: "killbilling-users@googlegroups.com"
  license:
    name: "Apache License, Version 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
- name: "Account"
- name: "Admin"
- name: "Bundle"
- name: "Catalog"
- name: "Credit"
- name: "CustomField"
- name: "Export"
- name: "InvoiceItem"
- name: "InvoicePayment"
- name: "Invoice"
- name: "NodesInfo"
- name: "Overdue"
- name: "PaymentGateway"
- name: "PaymentMethod"
- name: "Payment"
- name: "PluginInfo"
- name: "Security"
- name: "Subscription"
- name: "TagDefinition"
- name: "Tag"
- name: "Tenant"
- name: "PaymentTransaction"
- name: "Usage"
paths:
  /1.0/kb/accounts/{accountId}/tags:
    get:
      tags:
      - "Account"
      summary: "Retrieve account tags"
      description: ""
      operationId: "getAccountTags"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Add tags to account"
      description: ""
      operationId: "createAccountTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Account"
      summary: "Remove tags from account"
      description: ""
      operationId: "deleteAccountTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied or account does not have a default\
            \ payment method (AUTO_PAY_OFF tag only)"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts:
    get:
      tags:
      - "Account"
      summary: "Retrieve an account by external key"
      description: ""
      operationId: "getAccountByKey"
      produces:
      - "application/json"
      parameters:
      - name: "externalKey"
        in: "query"
        required: true
        type: "string"
      - name: "accountWithBalance"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "accountWithBalanceAndCBA"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Create account"
      description: ""
      operationId: "createAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Account"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Account created successfully"
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: "Invalid account data supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/search/{searchKey}:
    get:
      tags:
      - "Account"
      summary: "Search accounts"
      description: ""
      operationId: "searchAccounts"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "accountWithBalance"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "accountWithBalanceAndCBA"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/emails:
    get:
      tags:
      - "Account"
      summary: "Retrieve an account emails"
      description: ""
      operationId: "getEmails"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AccountEmail"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Add account email"
      description: ""
      operationId: "addEmail"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AccountEmail"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Email created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AccountEmail"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/emails/{email}:
    delete:
      tags:
      - "Account"
      summary: "Delete email from account"
      description: ""
      operationId: "removeEmail"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "email"
        in: "path"
        required: true
        type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/pagination:
    get:
      tags:
      - "Account"
      summary: "List accounts"
      description: ""
      operationId: "getAccounts"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "accountWithBalance"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "accountWithBalanceAndCBA"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}:
    get:
      tags:
      - "Account"
      summary: "Retrieve an account by id"
      description: ""
      operationId: "getAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "accountWithBalance"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "accountWithBalanceAndCBA"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Account"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Account"
      summary: "Update account"
      description: ""
      operationId: "updateAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Account"
      - name: "treatNullAsReset"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account data supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Account"
      summary: "Close account"
      description: ""
      operationId: "closeAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "cancelAllSubscriptions"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "writeOffUnpaidInvoices"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "itemAdjustUnpaidInvoices"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "removeFutureNotifications"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/children:
    get:
      tags:
      - "Account"
      summary: "List children accounts"
      description: ""
      operationId: "getChildrenAccounts"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "accountWithBalance"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "accountWithBalanceAndCBA"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"
        "400":
          description: "Invalid parent account id supplied"
        "404":
          description: "Parent Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/invoicePayments:
    get:
      tags:
      - "Account"
      summary: "Retrieve account invoice payments"
      description: ""
      operationId: "getInvoicePayments"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/InvoicePayment"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Trigger a payment for all unpaid invoices"
      description: ""
      operationId: "payAllInvoices"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "paymentMethodId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "externalPayment"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "paymentAmount"
        in: "query"
        required: false
        type: "number"
      - name: "targetDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
        "204":
          description: "Nothing to pay"
        "404":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/paymentMethods/{paymentMethodId}/setDefault:
    put:
      tags:
      - "Account"
      summary: "Set the default payment method"
      description: ""
      operationId: "setDefaultPaymentMethod"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "payAllUnpaidInvoices"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id or payment method id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/paymentMethods/refresh:
    put:
      tags:
      - "Account"
      summary: "Refresh account payment methods"
      description: ""
      operationId: "refreshPaymentMethods"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "pluginName"
        in: "query"
        required: false
        type: "string"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/block:
    get:
      tags:
      - "Account"
      summary: "Retrieve blocking states for account"
      description: ""
      operationId: "getBlockingStates"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "blockingStateTypes"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "SUBSCRIPTION"
          - "SUBSCRIPTION_BUNDLE"
          - "ACCOUNT"
        collectionFormat: "multi"
      - name: "blockingStateSvcs"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BlockingState"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Block an account"
      description: ""
      operationId: "addAccountBlockingState"
      consumes:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlockingState"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Blocking state created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BlockingState"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{childAccountId}/transferCredit:
    put:
      tags:
      - "Account"
      summary: "Move a given child credit to the parent level"
      description: ""
      operationId: "transferChildCreditToParent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "childAccountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Account does not have credit"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/auditLogs:
    get:
      tags:
      - "Account"
      summary: "Retrieve audit logs by account id"
      description: ""
      operationId: "getAccountAuditLogs"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/customFields:
    get:
      tags:
      - "Account"
      summary: "Retrieve account custom fields"
      description: ""
      operationId: "getAccountCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Add custom fields to account"
      description: ""
      operationId: "createAccountCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Account"
      summary: "Modify custom fields to account"
      description: ""
      operationId: "modifyAccountCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Account"
      summary: "Remove custom fields from account"
      description: ""
      operationId: "deleteAccountCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/paymentMethods:
    get:
      tags:
      - "Account"
      summary: "Retrieve account payment methods"
      description: ""
      operationId: "getPaymentMethodsForAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentMethod"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Add a payment method"
      description: ""
      operationId: "createPaymentMethod"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethod"
      - name: "isDefault"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "payAllUnpaidInvoices"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment method created"
          schema:
            $ref: "#/definitions/PaymentMethod"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/auditLogsWithHistory:
    get:
      tags:
      - "Account"
      summary: "Retrieve account audit logs with history by account id"
      description: ""
      operationId: "getAccountAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/bundles:
    get:
      tags:
      - "Account"
      summary: "Retrieve bundles for account"
      description: ""
      operationId: "getAccountBundles"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "externalKey"
        in: "query"
        required: false
        type: "string"
      - name: "bundlesFilter"
        in: "query"
        required: false
        type: "string"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bundle"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/emails/{accountEmailId}/auditLogsWithHistory:
    get:
      tags:
      - "Account"
      summary: "Retrieve account email audit logs with history by id"
      description: ""
      operationId: "getAccountEmailAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "accountEmailId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/timeline:
    get:
      tags:
      - "Account"
      summary: "Retrieve account timeline"
      description: ""
      operationId: "getAccountTimeline"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "parallel"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AccountTimeline"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/allCustomFields:
    get:
      tags:
      - "Account"
      summary: "Retrieve account customFields"
      description: ""
      operationId: "getAllCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "objectType"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ACCOUNT"
        - "ACCOUNT_EMAIL"
        - "BLOCKING_STATES"
        - "BUNDLE"
        - "CUSTOM_FIELD"
        - "INVOICE"
        - "PAYMENT"
        - "TRANSACTION"
        - "INVOICE_ITEM"
        - "INVOICE_PAYMENT"
        - "SUBSCRIPTION"
        - "SUBSCRIPTION_EVENT"
        - "SERVICE_BROADCAST"
        - "PAYMENT_ATTEMPT"
        - "PAYMENT_METHOD"
        - "TAG"
        - "TAG_DEFINITION"
        - "TENANT"
        - "TENANT_KVS"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/allTags:
    get:
      tags:
      - "Account"
      summary: "Retrieve account tags"
      description: ""
      operationId: "getAllTags"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "objectType"
        in: "query"
        required: false
        type: "string"
        enum:
        - "ACCOUNT"
        - "ACCOUNT_EMAIL"
        - "BLOCKING_STATES"
        - "BUNDLE"
        - "CUSTOM_FIELD"
        - "INVOICE"
        - "PAYMENT"
        - "TRANSACTION"
        - "INVOICE_ITEM"
        - "INVOICE_PAYMENT"
        - "SUBSCRIPTION"
        - "SUBSCRIPTION_EVENT"
        - "SERVICE_BROADCAST"
        - "PAYMENT_ATTEMPT"
        - "PAYMENT_METHOD"
        - "TAG"
        - "TAG_DEFINITION"
        - "TENANT"
        - "TENANT_KVS"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/block/{blockingId}/auditLogsWithHistory:
    get:
      tags:
      - "Account"
      summary: "Retrieve blocking state audit logs with history by id"
      description: ""
      operationId: "getBlockingStateAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "blockingId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Blocking state  not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/invoices:
    get:
      tags:
      - "Account"
      summary: "Retrieve account invoices"
      description: ""
      operationId: "getInvoicesForAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "withMigrationInvoices"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "unpaidInvoicesOnly"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "includeVoidedInvoices"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "invoicesFilter"
        in: "query"
        required: false
        type: "string"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/overdue:
    get:
      tags:
      - "Account"
      summary: "Retrieve overdue state for account"
      description: ""
      operationId: "getOverdueAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/OverdueState"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/payments:
    get:
      tags:
      - "Account"
      summary: "Retrieve account payments"
      description: ""
      operationId: "getPaymentsForAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Payment"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Account"
      summary: "Trigger a payment (authorization, purchase or credit)"
      description: ""
      operationId: "processPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "paymentMethodId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/payments:
    post:
      tags:
      - "Account"
      summary: "Trigger a payment using the account external key (authorization, purchase\
        \ or credit)"
      description: ""
      operationId: "processPaymentByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "externalKey"
        in: "query"
        required: true
        type: "string"
      - name: "paymentMethodId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid account external key supplied"
        "404":
          description: "Account not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/accounts/{accountId}/cbaRebalancing:
    put:
      tags:
      - "Account"
      summary: "Rebalance account CBA"
      description: ""
      operationId: "rebalanceExistingCBAOnAccount"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/healthcheck:
    put:
      tags:
      - "Admin"
      summary: "Put the host back into rotation"
      description: ""
      operationId: "putInRotation"
      produces:
      - "application/json"
      parameters: []
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Admin"
      summary: "Put the host out of rotation"
      description: ""
      operationId: "putOutOfRotation"
      produces:
      - "application/json"
      parameters: []
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/queues:
    get:
      tags:
      - "Admin"
      summary: "Get queues entries"
      description: ""
      operationId: "getQueueEntries"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "accountId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "queueName"
        in: "query"
        required: false
        type: "string"
      - name: "serviceName"
        in: "query"
        required: false
        type: "string"
      - name: "withHistory"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "minDate"
        in: "query"
        required: false
        type: "string"
      - name: "maxDate"
        in: "query"
        required: false
        type: "string"
      - name: "withInProcessing"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "withBusEvents"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "withNotifications"
        in: "query"
        required: false
        type: "boolean"
        default: true
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/cache:
    delete:
      tags:
      - "Admin"
      summary: "Invalidates the given Cache if specified, otherwise invalidates all\
        \ caches"
      description: ""
      operationId: "invalidatesCache"
      produces:
      - "application/json"
      parameters:
      - name: "cacheName"
        in: "query"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Cache name does not exist or is not alive"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/cache/accounts/{accountId}:
    delete:
      tags:
      - "Admin"
      summary: "Invalidates Caches per account level"
      description: ""
      operationId: "invalidatesCacheByAccount"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/cache/tenants:
    delete:
      tags:
      - "Admin"
      summary: "Invalidates Caches per tenant level"
      description: ""
      operationId: "invalidatesCacheByTenant"
      produces:
      - "application/json"
      parameters: []
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/invoices:
    post:
      tags:
      - "Admin"
      summary: "Trigger an invoice generation for all parked accounts"
      description: ""
      operationId: "triggerInvoiceGenerationForParkedAccounts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "Successful operation"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/admin/payments/{paymentId}/transactions/{paymentTransactionId}:
    put:
      tags:
      - "Admin"
      summary: "Update existing paymentTransaction and associated payment state"
      description: ""
      operationId: "updatePaymentTransactionState"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "paymentTransactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AdminPayment"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account data supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}:
    get:
      tags:
      - "Bundle"
      summary: "Retrieve a bundle by id"
      description: ""
      operationId: "getBundle"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Bundle"
        "400":
          description: "Invalid bundle id supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Bundle"
      summary: "Transfer a bundle to another account"
      description: ""
      operationId: "transferBundle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Bundle"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "billingPolicy"
        in: "query"
        required: false
        type: "string"
        default: "END_OF_TERM"
        enum:
        - "START_OF_TERM"
        - "END_OF_TERM"
        - "IMMEDIATE"
        - "ILLEGAL"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Bundle transferred successfully"
          schema:
            $ref: "#/definitions/Bundle"
        "400":
          description: "Invalid bundle id, requested date or policy supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/tags:
    get:
      tags:
      - "Bundle"
      summary: "Retrieve bundle tags"
      description: ""
      operationId: "getBundleTags"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid bundle id supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Bundle"
      summary: "Add tags to bundle"
      description: ""
      operationId: "createBundleTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid bundle id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Bundle"
      summary: "Remove tags from bundle"
      description: ""
      operationId: "deleteBundleTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid bundle id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/customFields:
    get:
      tags:
      - "Bundle"
      summary: "Retrieve bundle custom fields"
      description: ""
      operationId: "getBundleCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid bundle id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Bundle"
      summary: "Add custom fields to bundle"
      description: ""
      operationId: "createBundleCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid bundle id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Bundle"
      summary: "Modify custom fields to bundle"
      description: ""
      operationId: "modifyBundleCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid bundle id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Bundle"
      summary: "Remove custom fields from bundle"
      description: ""
      operationId: "deleteBundleCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid bundle id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/pagination:
    get:
      tags:
      - "Bundle"
      summary: "List bundles"
      description: ""
      operationId: "getBundles"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bundle"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/block:
    post:
      tags:
      - "Bundle"
      summary: "Block a bundle"
      description: ""
      operationId: "addBundleBlockingState"
      consumes:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlockingState"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Blocking state created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BlockingState"
        "400":
          description: "Invalid bundle id supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/auditLogsWithHistory:
    get:
      tags:
      - "Bundle"
      summary: "Retrieve bundle audit logs with history by id"
      description: ""
      operationId: "getBundleAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Subscription bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles:
    get:
      tags:
      - "Bundle"
      summary: "Retrieve a bundle by external key"
      description: ""
      operationId: "getBundleByKey"
      produces:
      - "application/json"
      parameters:
      - name: "externalKey"
        in: "query"
        required: true
        type: "string"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bundle"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/pause:
    put:
      tags:
      - "Bundle"
      summary: "Pause a bundle"
      description: ""
      operationId: "pauseBundle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid bundle id supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/renameKey:
    put:
      tags:
      - "Bundle"
      summary: "Update a bundle externalKey"
      description: ""
      operationId: "renameExternalKey"
      consumes:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Bundle"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid argumnent supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/{bundleId}/resume:
    put:
      tags:
      - "Bundle"
      summary: "Resume a bundle"
      description: ""
      operationId: "resumeBundle"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bundleId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid bundle id supplied"
        "404":
          description: "Bundle not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/bundles/search/{searchKey}:
    get:
      tags:
      - "Bundle"
      summary: "Search bundles"
      description: ""
      operationId: "searchBundles"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bundle"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/simplePlan:
    post:
      tags:
      - "Catalog"
      summary: "Add a simple plan entry in the current version of the catalog"
      description: ""
      operationId: "addSimplePlan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SimplePlan"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created new plan successfully"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve the catalog as JSON"
      description: ""
      operationId: "getCatalogJson"
      produces:
      - "application/json"
      parameters:
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
      - name: "accountId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Catalog"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Catalog"
      summary: "Delete all versions for a per tenant catalog"
      description: ""
      operationId: "deleteCatalog"
      parameters:
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/availableAddons:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve available add-ons for a given product"
      description: ""
      operationId: "getAvailableAddons"
      produces:
      - "application/json"
      parameters:
      - name: "baseProductName"
        in: "query"
        required: false
        type: "string"
      - name: "priceListName"
        in: "query"
        required: false
        type: "string"
      - name: "accountId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PlanDetail"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/availableBasePlans:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve available base plans"
      description: ""
      operationId: "getAvailableBasePlans"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PlanDetail"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/versions:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve a list of catalog versions"
      description: ""
      operationId: "getCatalogVersions"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
              format: "date-time"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/xml:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve the full catalog as XML"
      description: ""
      operationId: "getCatalogXml"
      produces:
      - "text/xml"
      parameters:
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date-time"
      - name: "accountId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Catalog"
      summary: "Upload the full catalog as XML"
      description: ""
      operationId: "uploadCatalogXml"
      consumes:
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Catalog XML created successfully"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/phase:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve phase for a given subscription and date"
      description: ""
      operationId: "getPhaseForSubscriptionAndDate"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Phase"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/plan:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve plan for a given subscription and date"
      description: ""
      operationId: "getPlanForSubscriptionAndDate"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Plan"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/priceList:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve priceList for a given subscription and date"
      description: ""
      operationId: "getPriceListForSubscriptionAndDate"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PriceList"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/catalog/product:
    get:
      tags:
      - "Catalog"
      summary: "Retrieve product for a given subscription and date"
      description: ""
      operationId: "getProductForSubscriptionAndDate"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/credits:
    post:
      tags:
      - "Credit"
      summary: "Create a credit"
      description: ""
      operationId: "createCredits"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/InvoiceItem"
      - name: "autoCommit"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created credit successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/InvoiceItem"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/credits/{creditId}:
    get:
      tags:
      - "Credit"
      summary: "Retrieve a credit by id"
      description: ""
      operationId: "getCredit"
      produces:
      - "application/json"
      parameters:
      - name: "creditId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/InvoiceItem"
        "400":
          description: "Invalid credit id supplied"
        "404":
          description: "Credit not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/customFields/search/{searchKey}:
    get:
      tags:
      - "CustomField"
      summary: "Search custom fields"
      description: ""
      operationId: "searchCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/customFields/pagination:
    get:
      tags:
      - "CustomField"
      summary: "List custom fields"
      description: ""
      operationId: "getCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/customFields/{customFieldId}/auditLogsWithHistory:
    get:
      tags:
      - "CustomField"
      summary: "Retrieve custom field audit logs with history by id"
      description: ""
      operationId: "getCustomFieldAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "customFieldId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/customFields/search:
    get:
      tags:
      - "CustomField"
      summary: "Search custom fields by type, name and optional value"
      description: ""
      operationId: "searchCustomFieldsByTypeName"
      produces:
      - "application/json"
      parameters:
      - name: "objectType"
        in: "query"
        required: false
        type: "string"
      - name: "fieldName"
        in: "query"
        required: false
        type: "string"
      - name: "fieldValue"
        in: "query"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/export/{accountId}:
    get:
      tags:
      - "Export"
      summary: "Export account data"
      description: ""
      operationId: "exportDataForAccount"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "Success"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoiceItems/{invoiceItemId}/tags:
    get:
      tags:
      - "InvoiceItem"
      summary: "Retrieve invoice item tags"
      description: ""
      operationId: "getInvoiceItemTags"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "accountId"
        in: "query"
        required: true
        type: "string"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid invoice item id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "InvoiceItem"
      summary: "Add tags to invoice item"
      description: ""
      operationId: "createInvoiceItemTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid invoice item id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "InvoiceItem"
      summary: "Remove tags from invoice item"
      description: ""
      operationId: "deleteInvoiceItemTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice item id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoiceItems/{invoiceItemId}/customFields:
    get:
      tags:
      - "InvoiceItem"
      summary: "Retrieve invoice item custom fields"
      description: ""
      operationId: "getInvoiceItemCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid invoice item id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "InvoiceItem"
      summary: "Add custom fields to invoice item"
      description: ""
      operationId: "createInvoiceItemCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid invoice item id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "InvoiceItem"
      summary: "Modify custom fields to invoice item"
      description: ""
      operationId: "modifyInvoiceItemCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice item id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "InvoiceItem"
      summary: "Remove custom fields from invoice item"
      description: ""
      operationId: "deleteInvoiceItemCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice item id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoiceItems/{invoiceItemId}/auditLogsWithHistory:
    get:
      tags:
      - "InvoiceItem"
      summary: "Retrieve invoice item audit logs with history by id"
      description: ""
      operationId: "getInvoiceItemAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Invoice item not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{paymentId}/tags:
    get:
      tags:
      - "InvoicePayment"
      summary: "Retrieve payment tags"
      description: ""
      operationId: "getInvoicePaymentTags"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid payment id supplied"
        "404":
          description: "Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "InvoicePayment"
      summary: "Add tags to payment"
      description: ""
      operationId: "createInvoicePaymentTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "InvoicePayment"
      summary: "Remove tags from payment"
      description: ""
      operationId: "deleteInvoicePaymentTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{paymentId}/chargebacks:
    post:
      tags:
      - "InvoicePayment"
      summary: "Record a chargeback"
      description: ""
      operationId: "createChargeback"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/InvoicePaymentTransaction"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created chargeback successfully"
          schema:
            $ref: "#/definitions/InvoicePayment"
        "400":
          description: "Invalid payment id supplied"
        "404":
          description: "Account or payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{paymentId}/chargebackReversals:
    post:
      tags:
      - "InvoicePayment"
      summary: "Record a chargebackReversal"
      description: ""
      operationId: "createChargebackReversal"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/InvoicePaymentTransaction"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created chargeback reversal successfully"
          schema:
            $ref: "#/definitions/InvoicePayment"
        "400":
          description: "Invalid payment id supplied"
        "404":
          description: "Account or payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{paymentId}:
    get:
      tags:
      - "InvoicePayment"
      summary: "Retrieve a payment by id"
      description: ""
      operationId: "getInvoicePayment"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/InvoicePayment"
        "400":
          description: "Invalid payment id supplied"
        "404":
          description: "Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "InvoicePayment"
      summary: "Complete an existing transaction"
      description: ""
      operationId: "completeInvoicePaymentTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{paymentId}/customFields:
    get:
      tags:
      - "InvoicePayment"
      summary: "Retrieve payment custom fields"
      description: ""
      operationId: "getInvoicePaymentCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "InvoicePayment"
      summary: "Add custom fields to payment"
      description: ""
      operationId: "createInvoicePaymentCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "InvoicePayment"
      summary: "Modify custom fields to payment"
      description: ""
      operationId: "modifyInvoicePaymentCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "InvoicePayment"
      summary: "Remove custom fields from payment"
      description: ""
      operationId: "deleteInvoicePaymentCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{paymentId}/refunds:
    post:
      tags:
      - "InvoicePayment"
      summary: "Refund a payment, and adjust the invoice if needed"
      description: ""
      operationId: "createRefundWithAdjustments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/InvoicePaymentTransaction"
      - name: "externalPayment"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "paymentMethodId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created refund successfully"
          schema:
            $ref: "#/definitions/InvoicePayment"
        "400":
          description: "Invalid payment id supplied"
        "404":
          description: "Account or payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoicePayments/{invoicePaymentId}/auditLogsWithHistory:
    get:
      tags:
      - "InvoicePayment"
      summary: "Retrieve invoice payment audit logs with history by id"
      description: ""
      operationId: "getInvoicePaymentAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "invoicePaymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Invoice payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/tags:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve invoice tags"
      description: ""
      operationId: "getInvoiceTags"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid invoice id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Add tags to invoice"
      description: ""
      operationId: "createInvoiceTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid invoice id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Invoice"
      summary: "Remove tags from invoice"
      description: ""
      operationId: "deleteInvoiceTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/pagination:
    get:
      tags:
      - "Invoice"
      summary: "List invoices"
      description: ""
      operationId: "getInvoices"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/search/{searchKey}:
    get:
      tags:
      - "Invoice"
      summary: "Search invoices"
      description: ""
      operationId: "searchInvoices"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve an invoice by id"
      description: ""
      operationId: "getInvoice"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withChildrenItems"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid invoice id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Adjust an invoice item"
      description: ""
      operationId: "adjustInvoiceItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/InvoiceItem"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created adjustment Successfully"
          schema:
            $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid account id, invoice id or invoice item id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/byNumber/{invoiceNumber}:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve an invoice by number"
      description: ""
      operationId: "getInvoiceByNumber"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceNumber"
        in: "path"
        required: true
        type: "integer"
        pattern: "[0-9]+"
        format: "int32"
      - name: "withChildrenItems"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Invoice"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/{invoiceItemId}/cba:
    delete:
      tags:
      - "Invoice"
      summary: "Delete a CBA item"
      description: ""
      operationId: "deleteCBA"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "invoiceItemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "accountId"
        in: "query"
        required: true
        type: "string"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid account id, invoice id or invoice item id supplied"
        "404":
          description: "Account or invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/html:
    get:
      tags:
      - "Invoice"
      summary: "Render an invoice as HTML"
      description: ""
      operationId: "getInvoiceAsHTML"
      produces:
      - "text/html"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/commitInvoice:
    put:
      tags:
      - "Invoice"
      summary: "Perform the invoice status transition from DRAFT to COMMITTED"
      description: ""
      operationId: "commitInvoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/migration/{accountId}:
    post:
      tags:
      - "Invoice"
      summary: "Create a migration invoice"
      description: ""
      operationId: "createMigrationInvoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/InvoiceItem"
      - name: "targetDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created migration invoice successfully"
          schema:
            $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid account id or target datetime supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/voidInvoice:
    put:
      tags:
      - "Invoice"
      summary: "Perform the action of voiding an invoice"
      description: ""
      operationId: "voidInvoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/customFields:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve invoice custom fields"
      description: ""
      operationId: "getInvoiceCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid invoice id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Add custom fields to invoice"
      description: ""
      operationId: "createInvoiceCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid invoice id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Invoice"
      summary: "Modify custom fields to invoice"
      description: ""
      operationId: "modifyInvoiceCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Invoice"
      summary: "Remove custom fields from invoice"
      description: ""
      operationId: "deleteInvoiceCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid invoice id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/charges/{accountId}:
    post:
      tags:
      - "Invoice"
      summary: "Create external charge(s)"
      description: ""
      operationId: "createExternalCharges"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/InvoiceItem"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "autoCommit"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created external charge Successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/InvoiceItem"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices:
    post:
      tags:
      - "Invoice"
      summary: "Trigger an invoice generation"
      description: ""
      operationId: "createFutureInvoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        required: true
        type: "string"
        format: "uuid"
      - name: "targetDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created invoice successfully"
          schema:
            $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid account id or target datetime supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/group:
    post:
      tags:
      - "Invoice"
      summary: "Trigger an invoice generation"
      description: ""
      operationId: "createFutureInvoiceGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "query"
        required: true
        type: "string"
        format: "uuid"
      - name: "targetDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created invoice successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid account id or target datetime supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/payments:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve payments associated with an invoice"
      description: ""
      operationId: "getPaymentsForInvoice"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/InvoicePayment"
        "400":
          description: "Invalid invoice id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Trigger a payment for invoice"
      description: ""
      operationId: "createInstantPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/InvoicePayment"
      - name: "externalPayment"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Created payment Successfully"
          schema:
            $ref: "#/definitions/InvoicePayment"
        "204":
          description: "Nothing to pay for"
        "400":
          description: "Invalid account id or invoice id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/taxes/{accountId}:
    post:
      tags:
      - "Invoice"
      summary: "Create tax items"
      description: ""
      operationId: "createTaxItems"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/InvoiceItem"
      - name: "autoCommit"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Create tax items successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/InvoiceItem"
        "400":
          description: "Invalid account id supplied"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/dryRun:
    post:
      tags:
      - "Invoice"
      summary: "Generate a dryRun invoice"
      description: ""
      operationId: "generateDryRunInvoice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/InvoiceDryRun"
      - name: "accountId"
        in: "query"
        required: true
        type: "string"
        format: "uuid"
      - name: "targetDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Invoice"
        "204":
          description: "Nothing to generate"
        "400":
          description: "Invalid account id or target datetime supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/catalogTranslation/{locale}:
    get:
      tags:
      - "Invoice"
      summary: "Retrieves the catalog translation for the tenant"
      description: ""
      operationId: "getCatalogTranslation"
      produces:
      - "text/plain"
      parameters:
      - name: "locale"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "400":
          description: "Invalid locale supplied"
        "404":
          description: "Template not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Upload the catalog translation for the tenant"
      description: ""
      operationId: "uploadCatalogTranslation"
      consumes:
      - "text/plain"
      produces:
      - "text/plain"
      parameters:
      - name: "locale"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "deleteIfExists"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Uploaded catalog translation Successfully"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{invoiceId}/auditLogsWithHistory:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve invoice audit logs with history by id"
      description: ""
      operationId: "getInvoiceAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "invoiceId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/byItemId/{itemId}:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve an invoice by invoice item id"
      description: ""
      operationId: "getInvoiceByItemId"
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withChildrenItems"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Invoice"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/manualPayTemplate/{locale}:
    get:
      tags:
      - "Invoice"
      summary: "Retrieves the manualPay invoice template for the tenant"
      description: ""
      operationId: "getInvoiceMPTemplate"
      produces:
      - "text/html"
      parameters:
      - name: "locale"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "404":
          description: "Template not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/template:
    get:
      tags:
      - "Invoice"
      summary: "Retrieves the invoice template for the tenant"
      description: ""
      operationId: "getInvoiceTemplate"
      produces:
      - "text/html"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "404":
          description: "Template not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Upload the invoice template for the tenant"
      description: ""
      operationId: "uploadInvoiceTemplate"
      consumes:
      - "text/html"
      produces:
      - "text/html"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "deleteIfExists"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Uploaded invoice template Successfully"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/translation/{locale}:
    get:
      tags:
      - "Invoice"
      summary: "Retrieves the invoice translation for the tenant"
      description: ""
      operationId: "getInvoiceTranslation"
      produces:
      - "text/plain"
      parameters:
      - name: "locale"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "400":
          description: "Invalid locale supplied"
        "404":
          description: "Translation not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Invoice"
      summary: "Upload the invoice translation for the tenant"
      description: ""
      operationId: "uploadInvoiceTranslation"
      consumes:
      - "text/plain"
      produces:
      - "text/plain"
      parameters:
      - name: "locale"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "deleteIfExists"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Uploaded invoice translation Successfully"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/{groupId}/group:
    get:
      tags:
      - "Invoice"
      summary: "Retrieve a set of invoices by group id"
      description: ""
      operationId: "getInvoicesGroup"
      produces:
      - "application/json"
      parameters:
      - name: "groupId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "accountId"
        in: "query"
        required: true
        type: "string"
        format: "uuid"
      - name: "withChildrenItems"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
        "400":
          description: "Invalid group id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/invoices/manualPayTemplate:
    post:
      tags:
      - "Invoice"
      summary: "Upload the manualPay invoice template for the tenant"
      description: ""
      operationId: "uploadInvoiceMPTemplate"
      consumes:
      - "text/html"
      produces:
      - "text/html"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "deleteIfExists"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/nodesInfo:
    get:
      tags:
      - "NodesInfo"
      summary: "Retrieve all the nodes infos"
      description: ""
      operationId: "getNodesInfo"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PluginInfo"
      security:
      - basicAuth: []
    post:
      tags:
      - "NodesInfo"
      summary: "Trigger a node command"
      description: ""
      operationId: "triggerNodeCommand"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/NodeCommand"
      - name: "localNodeOnly"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "202":
          description: "Successful operation"
        "400":
          description: "Invalid node command supplied"
      security:
      - basicAuth: []
  /1.0/kb/overdue:
    get:
      tags:
      - "Overdue"
      summary: "Retrieve the overdue config as JSON"
      description: ""
      operationId: "getOverdueConfigJson"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Overdue"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Overdue"
      summary: "Upload the full overdue config as JSON"
      description: ""
      operationId: "uploadOverdueConfigJson"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Overdue"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Successfully uploaded overdue config"
          schema:
            $ref: "#/definitions/Overdue"
        "400":
          description: "Invalid node command supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/overdue/xml:
    get:
      tags:
      - "Overdue"
      summary: "Retrieve the overdue config as XML"
      description: ""
      operationId: "getOverdueConfigXml"
      produces:
      - "text/xml"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Overdue"
      summary: "Upload the full overdue config as XML"
      description: ""
      operationId: "uploadOverdueConfigXml"
      consumes:
      - "text/xml"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Successfully uploaded overdue config"
          schema:
            type: "string"
        "400":
          description: "Invalid node command supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentGateways/hosted/form/{accountId}:
    post:
      tags:
      - "PaymentGateway"
      summary: "Generate form data to redirect the customer to the gateway"
      description: ""
      operationId: "buildFormDescriptor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "accountId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/HostedPaymentPageFields"
      - name: "paymentMethodId"
        in: "query"
        required: false
        type: "string"
        format: "uuid"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/HostedPaymentPageFormDescriptor"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentGateways/notification/{pluginName}:
    post:
      tags:
      - "PaymentGateway"
      summary: "Process a gateway notification"
      description: "The response is built by the appropriate plugin"
      operationId: "processNotification"
      consumes:
      - "*/*"
      produces:
      - "application/json"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "Successful"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentGateways/hosted/form:
    post:
      tags:
      - "PaymentGateway"
      summary: "Combo API to generate form data to redirect the customer to the gateway"
      description: ""
      operationId: "buildComboFormDescriptor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ComboHostedPaymentPage"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/HostedPaymentPageFormDescriptor"
        "400":
          description: "Invalid data for Account or PaymentMethod"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentMethods/pagination:
    get:
      tags:
      - "PaymentMethod"
      summary: "List payment methods"
      description: ""
      operationId: "getPaymentMethods"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "pluginName"
        in: "query"
        required: false
        type: "string"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentMethod"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentMethods/search/{searchKey}:
    get:
      tags:
      - "PaymentMethod"
      summary: "Search payment methods"
      description: ""
      operationId: "searchPaymentMethods"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "pluginName"
        in: "query"
        required: false
        type: "string"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentMethod"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentMethods/{paymentMethodId}:
    get:
      tags:
      - "PaymentMethod"
      summary: "Retrieve a payment method by id"
      description: ""
      operationId: "getPaymentMethod"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentMethod"
        "400":
          description: "Invalid paymentMethodId supplied"
        "404":
          description: "Account or payment method not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "PaymentMethod"
      summary: "Delete a payment method"
      description: ""
      operationId: "deletePaymentMethod"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "deleteDefaultPmWithAutoPayOff"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "forceDefaultPmDeletion"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid paymentMethodId supplied"
        "404":
          description: "Account or payment method not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentMethods/{paymentMethodId}/customFields:
    get:
      tags:
      - "PaymentMethod"
      summary: "Retrieve payment method custom fields"
      description: ""
      operationId: "getPaymentMethodCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid payment method id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "PaymentMethod"
      summary: "Add custom fields to payment method"
      description: ""
      operationId: "createPaymentMethodCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid payment method id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "PaymentMethod"
      summary: "Modify custom fields to payment method"
      description: ""
      operationId: "modifyPaymentMethodCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment method id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "PaymentMethod"
      summary: "Remove custom fields from payment method"
      description: ""
      operationId: "deletePaymentMethodCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment method id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentMethods/{paymentMethodId}/auditLogsWithHistory:
    get:
      tags:
      - "PaymentMethod"
      summary: "Retrieve payment method audit logs with history by id"
      description: ""
      operationId: "getPaymentMethodAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "paymentMethodId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentMethods:
    get:
      tags:
      - "PaymentMethod"
      summary: "Retrieve a payment method by external key"
      description: ""
      operationId: "getPaymentMethodByKey"
      produces:
      - "application/json"
      parameters:
      - name: "externalKey"
        in: "query"
        required: true
        type: "string"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/PaymentMethod"
        "404":
          description: "Account or payment method not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}/tags:
    get:
      tags:
      - "Payment"
      summary: "Retrieve payment payment tags"
      description: ""
      operationId: "getPaymentTags"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid payment id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Payment"
      summary: "Add tags to payment payment"
      description: ""
      operationId: "createPaymentTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Payment"
      summary: "Remove tags from payment payment"
      description: ""
      operationId: "deletePaymentTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}:
    get:
      tags:
      - "Payment"
      summary: "Retrieve a payment by id"
      description: ""
      operationId: "getPayment"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Payment"
      summary: "Capture an existing authorization"
      description: ""
      operationId: "captureAuthorization"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Payment"
      summary: "Complete an existing transaction"
      description: ""
      operationId: "completeTransaction"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Payment"
      summary: "Void an existing payment"
      description: ""
      operationId: "voidPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments:
    get:
      tags:
      - "Payment"
      summary: "Retrieve a payment by external key"
      description: ""
      operationId: "getPaymentByExternalKey"
      produces:
      - "application/json"
      parameters:
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "externalKey"
        in: "query"
        required: true
        type: "string"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Payment"
      summary: "Capture an existing authorization"
      description: ""
      operationId: "captureAuthorizationByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Payment"
      summary: "Complete an existing transaction"
      description: ""
      operationId: "completeTransactionByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Payment"
      summary: "Void an existing payment"
      description: ""
      operationId: "voidPaymentByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/pagination:
    get:
      tags:
      - "Payment"
      summary: "Get payments"
      description: ""
      operationId: "getPayments"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "pluginName"
        in: "query"
        required: false
        type: "string"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Payment"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/search/{searchKey}:
    get:
      tags:
      - "Payment"
      summary: "Search payments"
      description: ""
      operationId: "searchPayments"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginName"
        in: "query"
        required: false
        type: "string"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Payment"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}/customFields:
    get:
      tags:
      - "Payment"
      summary: "Retrieve payment custom fields"
      description: ""
      operationId: "getPaymentCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Payment"
      summary: "Add custom fields to payment"
      description: ""
      operationId: "createPaymentCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Payment"
      summary: "Modify custom fields to payment"
      description: ""
      operationId: "modifyPaymentCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Payment"
      summary: "Remove custom fields from payment payment"
      description: ""
      operationId: "deletePaymentCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid payment id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/cancelScheduledPaymentTransaction:
    delete:
      tags:
      - "Payment"
      summary: "Cancels a scheduled payment attempt retry"
      description: ""
      operationId: "cancelScheduledPaymentTransactionByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionExternalKey"
        in: "query"
        required: true
        type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid paymentTransactionExternalKey supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentTransactionId}/cancelScheduledPaymentTransaction:
    delete:
      tags:
      - "Payment"
      summary: "Cancels a scheduled payment attempt retry"
      description: ""
      operationId: "cancelScheduledPaymentTransactionById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentTransactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid paymentTransactionId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}/chargebacks:
    post:
      tags:
      - "Payment"
      summary: "Record a chargeback"
      description: ""
      operationId: "chargebackPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/chargebacks:
    post:
      tags:
      - "Payment"
      summary: "Record a chargeback"
      description: ""
      operationId: "chargebackPaymentByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}/chargebackReversals:
    post:
      tags:
      - "Payment"
      summary: "Record a chargeback reversal"
      description: ""
      operationId: "chargebackReversalPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/chargebackReversals:
    post:
      tags:
      - "Payment"
      summary: "Record a chargeback reversal"
      description: ""
      operationId: "chargebackReversalPaymentByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/combo:
    post:
      tags:
      - "Payment"
      summary: "Combo api to create a new payment transaction on a existing (or not)\
        \ account "
      description: ""
      operationId: "createComboPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ComboPaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid data for Account or PaymentMethod"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/attempts/{paymentAttemptId}/auditLogsWithHistory:
    get:
      tags:
      - "Payment"
      summary: "Retrieve payment attempt audit logs with history by id"
      description: ""
      operationId: "getPaymentAttemptAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "paymentAttemptId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}/auditLogsWithHistory:
    get:
      tags:
      - "Payment"
      summary: "Retrieve payment audit logs with history by id"
      description: ""
      operationId: "getPaymentAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/{paymentId}/refunds:
    post:
      tags:
      - "Payment"
      summary: "Refund an existing payment"
      description: ""
      operationId: "refundPayment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/payments/refunds:
    post:
      tags:
      - "Payment"
      summary: "Refund an existing payment"
      description: ""
      operationId: "refundPaymentByExternalKey"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Payment transaction created successfully"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Account or payment not found"
        "402":
          description: "Transaction declined by gateway"
        "422":
          description: "Payment is aborted by a control plugin"
        "502":
          description: "Failed to submit payment transaction"
        "503":
          description: "Payment in unknown status, failed to receive gateway response"
        "504":
          description: "Payment operation timeout"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/pluginsInfo:
    get:
      tags:
      - "PluginInfo"
      summary: "Retrieve the list of registered plugins"
      description: ""
      operationId: "getPluginsInfo"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PluginInfo"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/security/permissions:
    get:
      tags:
      - "Security"
      summary: "List user permissions"
      description: ""
      operationId: "getCurrentUserPermissions"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
      security:
      - basicAuth: []
  /1.0/kb/security/users:
    post:
      tags:
      - "Security"
      summary: "Add a new user with roles (to make api requests)"
      description: ""
      operationId: "addUserRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRoles"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "User role created successfully"
          schema:
            $ref: "#/definitions/UserRoles"
      security:
      - basicAuth: []
  /1.0/kb/security/users/{username}/password:
    put:
      tags:
      - "Security"
      summary: "Update a user password"
      description: ""
      operationId: "updateUserPassword"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRoles"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
  /1.0/kb/security/users/{username}/roles:
    get:
      tags:
      - "Security"
      summary: "Get roles associated to a user"
      description: ""
      operationId: "getUserRoles"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserRoles"
        "404":
          description: "The user does not exist or has been inactivated"
      security:
      - basicAuth: []
    put:
      tags:
      - "Security"
      summary: "Update roles associated to a user"
      description: ""
      operationId: "updateUserRoles"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserRoles"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
  /1.0/kb/security/users/{username}:
    delete:
      tags:
      - "Security"
      summary: "Invalidate an existing user"
      description: ""
      operationId: "invalidateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
  /1.0/kb/security/roles:
    post:
      tags:
      - "Security"
      summary: "Add a new role definition)"
      description: ""
      operationId: "addRoleDefinition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RoleDefinition"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Role definition created successfully"
          schema:
            $ref: "#/definitions/RoleDefinition"
      security:
      - basicAuth: []
    put:
      tags:
      - "Security"
      summary: "Update a new role definition)"
      description: ""
      operationId: "updateRoleDefinition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/RoleDefinition"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
      security:
      - basicAuth: []
  /1.0/kb/security/roles/{role}:
    get:
      tags:
      - "Security"
      summary: "Get role definition"
      description: ""
      operationId: "getRoleDefinition"
      produces:
      - "application/json"
      parameters:
      - name: "role"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RoleDefinition"
      security:
      - basicAuth: []
  /1.0/kb/security/subject:
    get:
      tags:
      - "Security"
      summary: "Get user information"
      description: ""
      operationId: "getCurrentUserSubject"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Subject"
      security:
      - basicAuth: []
  /1.0/kb/subscriptions/{subscriptionId}/tags:
    get:
      tags:
      - "Subscription"
      summary: "Retrieve subscription tags"
      description: ""
      operationId: "getSubscriptionTags"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Subscription not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Subscription"
      operationId: "createSubscriptionTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
        "400":
          description: "Invalid subscription id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Subscription"
      summary: "Remove tags from subscription"
      description: ""
      operationId: "deleteSubscriptionTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}/customFields:
    get:
      tags:
      - "Subscription"
      summary: "Retrieve subscription custom fields"
      description: ""
      operationId: "getSubscriptionCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid subscription id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Subscription"
      summary: "Add custom fields to subscription"
      description: ""
      operationId: "createSubscriptionCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
        "400":
          description: "Invalid subscription id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Subscription"
      summary: "Modify custom fields to subscription"
      description: ""
      operationId: "modifySubscriptionCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Subscription"
      summary: "Remove custom fields from subscription"
      description: ""
      operationId: "deleteSubscriptionCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}/block:
    post:
      tags:
      - "Subscription"
      summary: "Block a subscription"
      description: ""
      operationId: "addSubscriptionBlockingState"
      consumes:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/BlockingState"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Blocking state created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BlockingState"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Subscription not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}:
    get:
      tags:
      - "Subscription"
      summary: "Retrieve a subscription by id"
      description: ""
      operationId: "getSubscription"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Subscription"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Subscription not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "Subscription"
      summary: "Change entitlement plan"
      description: ""
      operationId: "changeSubscriptionPlan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Subscription"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "callCompletion"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callTimeoutSec"
        in: "query"
        required: false
        type: "integer"
        default: 3
        format: "int64"
      - name: "billingPolicy"
        in: "query"
        required: false
        type: "string"
        enum:
        - "START_OF_TERM"
        - "END_OF_TERM"
        - "IMMEDIATE"
        - "ILLEGAL"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Entitlement not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Subscription"
      summary: "Cancel an entitlement plan"
      description: ""
      operationId: "cancelSubscriptionPlan"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "requestedDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "callCompletion"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callTimeoutSec"
        in: "query"
        required: false
        type: "integer"
        default: 5
        format: "int64"
      - name: "entitlementPolicy"
        in: "query"
        required: false
        type: "string"
        enum:
        - "IMMEDIATE"
        - "END_OF_TERM"
      - name: "billingPolicy"
        in: "query"
        required: false
        type: "string"
        enum:
        - "START_OF_TERM"
        - "END_OF_TERM"
        - "IMMEDIATE"
        - "ILLEGAL"
      - name: "useRequestedDateForBilling"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Entitlement not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions:
    get:
      tags:
      - "Subscription"
      summary: "Retrieve a subscription by external key"
      description: ""
      operationId: "getSubscriptionByKey"
      produces:
      - "application/json"
      parameters:
      - name: "externalKey"
        in: "query"
        required: true
        type: "string"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Subscription"
        "404":
          description: "Subscription not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Subscription"
      summary: "Create an subscription"
      description: ""
      operationId: "createSubscription"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Subscription"
      - name: "entitlementDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "billingDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "renameKeyIfExistsAndUnused"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "migrated"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "skipResponse"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callCompletion"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callTimeoutSec"
        in: "query"
        required: false
        type: "integer"
        default: 3
        format: "int64"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Subscription created successfully"
          schema:
            $ref: "#/definitions/Subscription"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/createSubscriptionWithAddOns:
    post:
      tags:
      - "Subscription"
      summary: "Create an entitlement with addOn products"
      description: ""
      operationId: "createSubscriptionWithAddOns"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Subscription"
      - name: "entitlementDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "billingDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "migrated"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "skipResponse"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "renameKeyIfExistsAndUnused"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "callCompletion"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callTimeoutSec"
        in: "query"
        required: false
        type: "integer"
        default: 3
        format: "int64"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Subscriptions created successfully"
          schema:
            $ref: "#/definitions/Bundle"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/createSubscriptionsWithAddOns:
    post:
      tags:
      - "Subscription"
      summary: "Create multiple entitlements with addOn products"
      description: ""
      operationId: "createSubscriptionsWithAddOns"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/BulkSubscriptionsBundle"
      - name: "entitlementDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "billingDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "renameKeyIfExistsAndUnused"
        in: "query"
        required: false
        type: "boolean"
        default: true
      - name: "migrated"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "skipResponse"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callCompletion"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "callTimeoutSec"
        in: "query"
        required: false
        type: "integer"
        default: 3
        format: "int64"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Subscriptions created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bundle"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}/auditLogsWithHistory:
    get:
      tags:
      - "Subscription"
      summary: "Retrieve subscription audit logs with history by id"
      description: ""
      operationId: "getSubscriptionAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Subscription not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/events/{eventId}/auditLogsWithHistory:
    get:
      tags:
      - "Subscription"
      summary: "Retrieve subscription event audit logs with history by id"
      description: ""
      operationId: "getSubscriptionEventAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Subscription event not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}/uncancel:
    put:
      tags:
      - "Subscription"
      summary: "Un-cancel an entitlement"
      description: ""
      operationId: "uncancelSubscriptionPlan"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Entitlement not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}/undoChangePlan:
    put:
      tags:
      - "Subscription"
      summary: "Undo a pending change plan on an entitlement"
      description: ""
      operationId: "undoChangeSubscriptionPlan"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid subscription id supplied"
        "404":
          description: "Entitlement not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/subscriptions/{subscriptionId}/bcd:
    put:
      tags:
      - "Subscription"
      summary: "Update the BCD associated to a subscription"
      description: ""
      operationId: "updateSubscriptionBCD"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Subscription"
      - name: "effectiveFromDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "forceNewBcdWithPastEffectiveDate"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid entitlement supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tagDefinitions:
    get:
      tags:
      - "TagDefinition"
      summary: "List tag definitions"
      description: ""
      operationId: "getTagDefinitions"
      produces:
      - "application/json"
      parameters:
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TagDefinition"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "TagDefinition"
      summary: "Create a tag definition"
      description: ""
      operationId: "createTagDefinition"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/TagDefinition"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag definition created successfully"
          schema:
            $ref: "#/definitions/TagDefinition"
        "400":
          description: "Invalid name or description supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tagDefinitions/{tagDefinitionId}:
    get:
      tags:
      - "TagDefinition"
      summary: "Retrieve a tag definition"
      description: ""
      operationId: "getTagDefinition"
      produces:
      - "application/json"
      parameters:
      - name: "tagDefinitionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TagDefinition"
        "400":
          description: "Invalid tagDefinitionId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "TagDefinition"
      summary: "Delete a tag definition"
      description: ""
      operationId: "deleteTagDefinition"
      produces:
      - "application/json"
      parameters:
      - name: "tagDefinitionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid tagDefinitionId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tagDefinitions/{tagDefinitionId}/auditLogsWithHistory:
    get:
      tags:
      - "TagDefinition"
      summary: "Retrieve tag definition audit logs with history by id"
      description: ""
      operationId: "getTagDefinitionAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "tagDefinitionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tags/pagination:
    get:
      tags:
      - "Tag"
      summary: "List tags"
      description: ""
      operationId: "getTags"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tags/search/{searchKey}:
    get:
      tags:
      - "Tag"
      summary: "Search tags"
      description: ""
      operationId: "searchTags"
      produces:
      - "application/json"
      parameters:
      - name: "searchKey"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "offset"
        in: "query"
        required: false
        type: "integer"
        default: 0
        format: "int64"
      - name: "limit"
        in: "query"
        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tags/{tagId}/auditLogsWithHistory:
    get:
      tags:
      - "Tag"
      summary: "Retrieve tag audit logs with history by id"
      description: ""
      operationId: "getTagAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "tagId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a tenant by its API key"
      description: ""
      operationId: "getTenantByApiKey"
      produces:
      - "application/json"
      parameters:
      - name: "apiKey"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Tenant"
        "404":
          description: "Tenant not found"
      security:
      - basicAuth: []
    post:
      tags:
      - "Tenant"
      summary: "Create a tenant"
      description: ""
      operationId: "createTenant"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/Tenant"
      - name: "useGlobalDefault"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tenant created successfully"
          schema:
            $ref: "#/definitions/Tenant"
        "409":
          description: "Tenant already exists"
      security:
      - basicAuth: []
  /1.0/kb/tenants/uploadPluginPaymentStateMachineConfig/{pluginName}:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a per tenant payment state machine for a plugin"
      description: ""
      operationId: "getPluginPaymentStateMachineConfig"
      produces:
      - "application/json"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Tenant"
      summary: "Add a per tenant payment state machine for a plugin"
      description: ""
      operationId: "uploadPluginPaymentStateMachineConfig"
      consumes:
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Per tenant state machine uploaded successfully"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Tenant"
      summary: "Delete a per tenant payment state machine for a plugin"
      description: ""
      operationId: "deletePluginPaymentStateMachineConfig"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants/uploadPerTenantConfig:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a per tenant configuration (system properties)"
      description: ""
      operationId: "getPerTenantConfiguration"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Tenant"
      summary: "Add a per tenant configuration (system properties)"
      description: ""
      operationId: "uploadPerTenantConfiguration"
      consumes:
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Per tenant configuration uploaded successfully"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Tenant"
      summary: "Delete a per tenant configuration (system properties)"
      description: ""
      operationId: "deletePerTenantConfiguration"
      parameters:
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants/uploadPluginConfig/{pluginName}:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a per tenant configuration for a plugin"
      description: ""
      operationId: "getPluginConfiguration"
      produces:
      - "application/json"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Tenant"
      summary: "Add a per tenant configuration for a plugin"
      description: ""
      operationId: "uploadPluginConfiguration"
      consumes:
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Plugin configuration uploaded successfully"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Tenant"
      summary: "Delete a per tenant configuration for a plugin"
      description: ""
      operationId: "deletePluginConfiguration"
      parameters:
      - name: "pluginName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants/registerNotificationCallback:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a push notification"
      description: ""
      operationId: "getPushNotificationCallbacks"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Tenant"
      summary: "Create a push notification"
      description: ""
      operationId: "registerPushNotificationCallback"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "cb"
        in: "query"
        required: false
        type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Push notification registered successfully"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Tenant"
      summary: "Delete a push notification"
      description: ""
      operationId: "deletePushNotificationCallbacks"
      parameters:
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants/userKeyValue/{keyName}:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a per tenant user key/value"
      description: ""
      operationId: "getUserKeyValue"
      produces:
      - "application/json"
      parameters:
      - name: "keyName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "Tenant"
      summary: "Add a per tenant user key/value"
      description: ""
      operationId: "insertUserKeyValue"
      consumes:
      - "text/plain"
      produces:
      - "application/json"
      parameters:
      - name: "keyName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "string"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Per tenant config uploaded successfully"
          schema:
            $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "Tenant"
      summary: "Delete  a per tenant user key/value"
      description: ""
      operationId: "deleteUserKeyValue"
      parameters:
      - name: "keyName"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants/uploadPerTenantConfig/{keyPrefix}/search:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a per tenant key value based on key prefix"
      description: ""
      operationId: "getAllPluginConfiguration"
      produces:
      - "application/json"
      parameters:
      - name: "keyPrefix"
        in: "path"
        required: true
        type: "string"
        pattern: ".*"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TenantKeyValue"
        "400":
          description: "Invalid tenantId supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/tenants/{tenantId}:
    get:
      tags:
      - "Tenant"
      summary: "Retrieve a tenant by id"
      description: ""
      operationId: "getTenant"
      produces:
      - "application/json"
      parameters:
      - name: "tenantId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Tenant"
        "400":
          description: "Invalid tenantId supplied"
        "404":
          description: "Tenant not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentTransactions/{transactionId}/tags:
    get:
      tags:
      - "PaymentTransaction"
      summary: "Retrieve payment transaction tags"
      description: ""
      operationId: "getTransactionTags"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "includedDeleted"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid transaction id supplied"
        "404":
          description: "Invoice not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "PaymentTransaction"
      summary: "Add tags to payment transaction"
      description: ""
      operationId: "createTransactionTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            type: "string"
            format: "uuid"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Tag created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Invalid transaction id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "PaymentTransaction"
      summary: "Remove tags from payment transaction"
      description: ""
      operationId: "deleteTransactionTags"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "tagDef"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid transaction id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentTransactions/{transactionId}:
    get:
      tags:
      - "PaymentTransaction"
      summary: "Retrieve a payment by transaction id"
      description: ""
      operationId: "getPaymentByTransactionId"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "PaymentTransaction"
      summary: "Mark a pending payment transaction as succeeded or failed"
      description: ""
      operationId: "notifyStateChanged"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PaymentTransaction"
      - name: "controlPluginName"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Successfully notifiy state change"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid paymentId supplied"
        "404":
          description: "Account or Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentTransactions:
    get:
      tags:
      - "PaymentTransaction"
      summary: "Retrieve a payment by transaction external key"
      description: ""
      operationId: "getPaymentByTransactionExternalKey"
      produces:
      - "application/json"
      parameters:
      - name: "transactionExternalKey"
        in: "query"
        required: true
        type: "string"
      - name: "withPluginInfo"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "withAttempts"
        in: "query"
        required: false
        type: "boolean"
        default: false
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        "404":
          description: "Payment not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentTransactions/{transactionId}/customFields:
    get:
      tags:
      - "PaymentTransaction"
      summary: "Retrieve payment transaction custom fields"
      description: ""
      operationId: "getTransactionCustomFields"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "audit"
        in: "query"
        required: false
        type: "string"
        default: "NONE"
        enum:
        - "FULL"
        - "MINIMAL"
        - "NONE"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid transaction id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    post:
      tags:
      - "PaymentTransaction"
      summary: "Add custom fields to payment transaction"
      description: ""
      operationId: "createTransactionCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "201":
          description: "Custom field created successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CustomField"
        "400":
          description: "Invalid transaction id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    put:
      tags:
      - "PaymentTransaction"
      summary: "Modify custom fields to payment transaction"
      description: ""
      operationId: "modifyTransactionCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - in: "body"
        name: "body"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/CustomField"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid transaction id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
    delete:
      tags:
      - "PaymentTransaction"
      summary: "Remove custom fields from payment transaction"
      description: ""
      operationId: "deleteTransactionCustomFields"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "customField"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
          format: "uuid"
        collectionFormat: "multi"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "204":
          description: "Successful operation"
        "400":
          description: "Invalid transaction id supplied"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/paymentTransactions/{transactionId}/auditLogsWithHistory:
    get:
      tags:
      - "PaymentTransaction"
      summary: "Retrieve payment transaction audit logs with history by id"
      description: ""
      operationId: "getTransactionAuditLogsWithHistory"
      produces:
      - "application/json"
      parameters:
      - name: "transactionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "404":
          description: "Account not found"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/usages/{subscriptionId}/{unitType}:
    get:
      tags:
      - "Usage"
      summary: "Retrieve usage for a subscription and unit type"
      description: ""
      operationId: "getUsage"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "unitType"
        in: "path"
        required: true
        type: "string"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RolledUpUsage"
        "400":
          description: "Missing start date or end date"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/usages/{subscriptionId}:
    get:
      tags:
      - "Usage"
      summary: "Retrieve usage for a subscription"
      description: ""
      operationId: "getAllUsage"
      produces:
      - "application/json"
      parameters:
      - name: "subscriptionId"
        in: "path"
        required: true
        type: "string"
        pattern: "\\w+-\\w+-\\w+-\\w+-\\w+"
        format: "uuid"
      - name: "startDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "endDate"
        in: "query"
        required: false
        type: "string"
        format: "date"
      - name: "pluginProperty"
        in: "query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/RolledUpUsage"
        "400":
          description: "Missing start date or end date"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
  /1.0/kb/usages:
    post:
      tags:
      - "Usage"
      summary: "Record usage for a subscription"
      description: ""
      operationId: "recordUsage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SubscriptionUsageRecord"
      - name: "X-Killbill-CreatedBy"
        in: "header"
        required: true
        type: "string"
      - name: "X-Killbill-Reason"
        in: "header"
        required: false
        type: "string"
      - name: "X-Killbill-Comment"
        in: "header"
        required: false
        type: "string"
      responses:
        "200":
          description: "Successfully recorded usage data change"
        "400":
          description: "Invalid subscription (e.g. inactive)"
      security:
      - basicAuth: []
      - Killbill Api Key: []
      - Killbill Api Secret: []
securityDefinitions:
  basicAuth:
    type: "basic"
  Killbill Api Key:
    type: "apiKey"
    name: "X-Killbill-ApiKey"
    in: "header"
  Killbill Api Secret:
    type: "apiKey"
    name: "X-Killbill-ApiSecret"
    in: "header"
definitions:
  AuditLog:
    type: "object"
    properties:
      changeType:
        type: "string"
      changeDate:
        type: "string"
        format: "date-time"
      objectType:
        type: "string"
        enum:
        - "ACCOUNT"
        - "ACCOUNT_EMAIL"
        - "BLOCKING_STATES"
        - "BUNDLE"
        - "CUSTOM_FIELD"
        - "INVOICE"
        - "PAYMENT"
        - "TRANSACTION"
        - "INVOICE_ITEM"
        - "INVOICE_PAYMENT"
        - "SUBSCRIPTION"
        - "SUBSCRIPTION_EVENT"
        - "SERVICE_BROADCAST"
        - "PAYMENT_ATTEMPT"
        - "PAYMENT_METHOD"
        - "TAG"
        - "TAG_DEFINITION"
        - "TENANT"
        - "TENANT_KVS"
      objectId:
        type: "string"
        format: "uuid"
      changedBy:
        type: "string"
      reasonCode:
        type: "string"
      comments:
        type: "string"
      userToken:
        type: "string"
      history:
        $ref: "#/definitions/Entity"
  Entity:
    type: "object"
    properties:
      updatedDate:
        type: "string"
        format: "date-time"
      createdDate:
        type: "string"
        format: "date-time"
      id:
        type: "string"
        format: "uuid"
  Tag:
    type: "object"
    properties:
      tagId:
        type: "string"
        format: "uuid"
      objectType:
        type: "string"
        enum:
        - "ACCOUNT"
        - "ACCOUNT_EMAIL"
        - "BLOCKING_STATES"
        - "BUNDLE"
        - "CUSTOM_FIELD"
        - "INVOICE"
        - "PAYMENT"
        - "TRANSACTION"
        - "INVOICE_ITEM"
        - "INVOICE_PAYMENT"
        - "SUBSCRIPTION"
        - "SUBSCRIPTION_EVENT"
        - "SERVICE_BROADCAST"
        - "PAYMENT_ATTEMPT"
        - "PAYMENT_METHOD"
        - "TAG"
        - "TAG_DEFINITION"
        - "TENANT"
        - "TENANT_KVS"
      objectId:
        type: "string"
        format: "uuid"
      tagDefinitionId:
        type: "string"
        format: "uuid"
      tagDefinitionName:
        type: "string"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  Account:
    type: "object"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      firstNameLength:
        type: "integer"
        format: "int32"
      externalKey:
        type: "string"
      email:
        type: "string"
      billCycleDayLocal:
        type: "integer"
        format: "int32"
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      parentAccountId:
        type: "string"
        format: "uuid"
      isPaymentDelegatedToParent:
        type: "boolean"
      paymentMethodId:
        type: "string"
        format: "uuid"
      referenceTime:
        type: "string"
        format: "date-time"
      timeZone:
        type: "string"
      address1:
        type: "string"
      address2:
        type: "string"
      postalCode:
        type: "string"
      company:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      country:
        type: "string"
      locale:
        type: "string"
      phone:
        type: "string"
      notes:
        type: "string"
      isMigrated:
        type: "boolean"
      accountBalance:
        type: "number"
      accountCBA:
        type: "number"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  AccountEmail:
    type: "object"
    required:
    - "email"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      email:
        type: "string"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  InvoicePayment:
    type: "object"
    properties:
      targetInvoiceId:
        type: "string"
        format: "uuid"
      accountId:
        type: "string"
        format: "uuid"
      paymentId:
        type: "string"
        format: "uuid"
      paymentNumber:
        type: "string"
      paymentExternalKey:
        type: "string"
      authAmount:
        type: "number"
      capturedAmount:
        type: "number"
      purchasedAmount:
        type: "number"
      refundedAmount:
        type: "number"
      creditedAmount:
        type: "number"
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      paymentMethodId:
        type: "string"
        format: "uuid"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/PaymentTransaction"
      paymentAttempts:
        type: "array"
        items:
          $ref: "#/definitions/PaymentAttempt"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  PaymentAttempt:
    type: "object"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      paymentMethodId:
        type: "string"
        format: "uuid"
      paymentExternalKey:
        type: "string"
      transactionId:
        type: "string"
        format: "uuid"
      transactionExternalKey:
        type: "string"
      transactionType:
        type: "string"
        enum:
        - "AUTHORIZE"
        - "CAPTURE"
        - "CHARGEBACK"
        - "CREDIT"
        - "PURCHASE"
        - "REFUND"
        - "VOID"
      effectiveDate:
        type: "string"
        format: "date-time"
      stateName:
        type: "string"
      amount:
        type: "number"
        description: "Transaction amount, required except for void operations"
      currency:
        type: "string"
        description: "Amount currency (account currency unless specified)"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      pluginName:
        type: "string"
      pluginProperties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  PaymentTransaction:
    type: "object"
    properties:
      transactionId:
        type: "string"
        format: "uuid"
      transactionExternalKey:
        type: "string"
      paymentId:
        type: "string"
        format: "uuid"
        description: "Associated payment id, required when notifying state transitions"
      paymentExternalKey:
        type: "string"
      transactionType:
        type: "string"
        enum:
        - "AUTHORIZE"
        - "CAPTURE"
        - "CHARGEBACK"
        - "CREDIT"
        - "PURCHASE"
        - "REFUND"
        - "VOID"
      amount:
        type: "number"
        description: "Transaction amount, required except for void operations"
      currency:
        type: "string"
        description: "Amount currency (account currency unless specified)"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      effectiveDate:
        type: "string"
        format: "date-time"
      processedAmount:
        type: "number"
      processedCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      status:
        type: "string"
        description: "Transaction status, required for state change notifications"
        enum:
        - "SUCCESS"
        - "UNKNOWN"
        - "PENDING"
        - "PAYMENT_FAILURE"
        - "PLUGIN_FAILURE"
        - "PAYMENT_SYSTEM_OFF"
      gatewayErrorCode:
        type: "string"
      gatewayErrorMsg:
        type: "string"
      firstPaymentReferenceId:
        type: "string"
      secondPaymentReferenceId:
        type: "string"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  PluginProperty:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "string"
      isUpdatable:
        type: "boolean"
  BlockingState:
    type: "object"
    properties:
      blockedId:
        type: "string"
        format: "uuid"
      stateName:
        type: "string"
      service:
        type: "string"
      isBlockChange:
        type: "boolean"
      isBlockEntitlement:
        type: "boolean"
      isBlockBilling:
        type: "boolean"
      effectiveDate:
        type: "string"
        format: "date-time"
      type:
        type: "string"
        enum:
        - "SUBSCRIPTION"
        - "SUBSCRIPTION_BUNDLE"
        - "ACCOUNT"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  CustomField:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      customFieldId:
        type: "string"
        format: "uuid"
      objectId:
        type: "string"
        format: "uuid"
      objectType:
        type: "string"
        enum:
        - "ACCOUNT"
        - "ACCOUNT_EMAIL"
        - "BLOCKING_STATES"
        - "BUNDLE"
        - "CUSTOM_FIELD"
        - "INVOICE"
        - "PAYMENT"
        - "TRANSACTION"
        - "INVOICE_ITEM"
        - "INVOICE_PAYMENT"
        - "SUBSCRIPTION"
        - "SUBSCRIPTION_EVENT"
        - "SERVICE_BROADCAST"
        - "PAYMENT_ATTEMPT"
        - "PAYMENT_METHOD"
        - "TAG"
        - "TAG_DEFINITION"
        - "TENANT"
        - "TENANT_KVS"
      name:
        type: "string"
      value:
        type: "string"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  PaymentMethod:
    type: "object"
    properties:
      paymentMethodId:
        type: "string"
        format: "uuid"
      externalKey:
        type: "string"
      accountId:
        type: "string"
        format: "uuid"
      isDefault:
        type: "boolean"
      pluginName:
        type: "string"
      pluginInfo:
        $ref: "#/definitions/PaymentMethodPluginDetail"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  PaymentMethodPluginDetail:
    type: "object"
    properties:
      externalPaymentMethodId:
        type: "string"
      isDefaultPaymentMethod:
        type: "boolean"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
  BlockPrice:
    type: "object"
    properties:
      unitName:
        type: "string"
      size:
        type: "number"
      price:
        type: "number"
      max:
        type: "number"
  Bundle:
    type: "object"
    required:
    - "accountId"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      bundleId:
        type: "string"
        format: "uuid"
      externalKey:
        type: "string"
      subscriptions:
        type: "array"
        items:
          $ref: "#/definitions/Subscription"
      timeline:
        $ref: "#/definitions/BundleTimeline"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  BundleTimeline:
    type: "object"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      bundleId:
        type: "string"
        format: "uuid"
      externalKey:
        type: "string"
      events:
        type: "array"
        items:
          $ref: "#/definitions/EventSubscription"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  EventSubscription:
    type: "object"
    properties:
      eventId:
        type: "string"
        format: "uuid"
      billingPeriod:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "BIWEEKLY"
        - "THIRTY_DAYS"
        - "SIXTY_DAYS"
        - "NINETY_DAYS"
        - "MONTHLY"
        - "BIMESTRIAL"
        - "QUARTERLY"
        - "TRIANNUAL"
        - "BIANNUAL"
        - "ANNUAL"
        - "BIENNIAL"
        - "NO_BILLING_PERIOD"
      effectiveDate:
        type: "string"
        format: "date-time"
      plan:
        type: "string"
      product:
        type: "string"
      priceList:
        type: "string"
      eventType:
        type: "string"
        enum:
        - "START_ENTITLEMENT"
        - "START_BILLING"
        - "PAUSE_ENTITLEMENT"
        - "PAUSE_BILLING"
        - "RESUME_ENTITLEMENT"
        - "RESUME_BILLING"
        - "PHASE"
        - "CHANGE"
        - "STOP_ENTITLEMENT"
        - "STOP_BILLING"
        - "SERVICE_STATE_CHANGE"
      isBlockedBilling:
        type: "boolean"
      isBlockedEntitlement:
        type: "boolean"
      serviceName:
        type: "string"
      serviceStateName:
        type: "string"
      phase:
        type: "string"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  PhasePrice:
    type: "object"
    properties:
      planName:
        type: "string"
      phaseName:
        type: "string"
      phaseType:
        type: "string"
      fixedPrice:
        type: "number"
      recurringPrice:
        type: "number"
      usagePrices:
        type: "array"
        items:
          $ref: "#/definitions/UsagePrice"
  Subscription:
    type: "object"
    required:
    - "billingPeriod"
    - "planName"
    - "priceList"
    - "productName"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      bundleId:
        type: "string"
        format: "uuid"
      bundleExternalKey:
        type: "string"
      subscriptionId:
        type: "string"
        format: "uuid"
      externalKey:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      productName:
        type: "string"
      productCategory:
        type: "string"
        enum:
        - "BASE"
        - "ADD_ON"
        - "STANDALONE"
      billingPeriod:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "BIWEEKLY"
        - "THIRTY_DAYS"
        - "SIXTY_DAYS"
        - "NINETY_DAYS"
        - "MONTHLY"
        - "BIMESTRIAL"
        - "QUARTERLY"
        - "TRIANNUAL"
        - "BIANNUAL"
        - "ANNUAL"
        - "BIENNIAL"
        - "NO_BILLING_PERIOD"
      phaseType:
        type: "string"
        enum:
        - "TRIAL"
        - "DISCOUNT"
        - "FIXEDTERM"
        - "EVERGREEN"
      priceList:
        type: "string"
      planName:
        type: "string"
      state:
        type: "string"
        enum:
        - "PENDING"
        - "ACTIVE"
        - "BLOCKED"
        - "CANCELLED"
        - "EXPIRED"
      sourceType:
        type: "string"
        enum:
        - "NATIVE"
        - "MIGRATED"
        - "TRANSFERRED"
      cancelledDate:
        type: "string"
        format: "date-time"
      chargedThroughDate:
        type: "string"
        format: "date"
      billingStartDate:
        type: "string"
        format: "date-time"
      billingEndDate:
        type: "string"
        format: "date-time"
      billCycleDayLocal:
        type: "integer"
        format: "int32"
      events:
        type: "array"
        items:
          $ref: "#/definitions/EventSubscription"
      priceOverrides:
        type: "array"
        items:
          $ref: "#/definitions/PhasePrice"
      prices:
        type: "array"
        items:
          $ref: "#/definitions/PhasePrice"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  TierPrice:
    type: "object"
    properties:
      blockPrices:
        type: "array"
        items:
          $ref: "#/definitions/BlockPrice"
  UsagePrice:
    type: "object"
    properties:
      usageName:
        type: "string"
      usageType:
        type: "string"
        enum:
        - "CAPACITY"
        - "CONSUMABLE"
      billingMode:
        type: "string"
        enum:
        - "IN_ADVANCE"
        - "IN_ARREAR"
      tierBlockPolicy:
        type: "string"
        enum:
        - "ALL_TIERS"
        - "TOP_TIER"
      tierPrices:
        type: "array"
        items:
          $ref: "#/definitions/TierPrice"
  AccountTimeline:
    type: "object"
    properties:
      account:
        $ref: "#/definitions/Account"
      bundles:
        type: "array"
        items:
          $ref: "#/definitions/Bundle"
      invoices:
        type: "array"
        items:
          $ref: "#/definitions/Invoice"
      payments:
        type: "array"
        items:
          $ref: "#/definitions/InvoicePayment"
  Invoice:
    type: "object"
    properties:
      amount:
        type: "number"
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      status:
        type: "string"
        enum:
        - "DRAFT"
        - "COMMITTED"
        - "VOID"
      creditAdj:
        type: "number"
      refundAdj:
        type: "number"
      invoiceId:
        type: "string"
        format: "uuid"
      invoiceDate:
        type: "string"
        format: "date"
      targetDate:
        type: "string"
        format: "date"
      invoiceNumber:
        type: "string"
      balance:
        type: "number"
      accountId:
        type: "string"
        format: "uuid"
      bundleKeys:
        type: "string"
      credits:
        type: "array"
        items:
          $ref: "#/definitions/InvoiceItem"
      items:
        type: "array"
        items:
          $ref: "#/definitions/InvoiceItem"
      trackingIds:
        type: "array"
        items:
          type: "string"
      isParentInvoice:
        type: "boolean"
      parentInvoiceId:
        type: "string"
        format: "uuid"
      parentAccountId:
        type: "string"
        format: "uuid"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  InvoiceItem:
    type: "object"
    required:
    - "accountId"
    - "invoiceItemId"
    properties:
      invoiceItemId:
        type: "string"
        format: "uuid"
      invoiceId:
        type: "string"
        format: "uuid"
      linkedInvoiceItemId:
        type: "string"
        format: "uuid"
      accountId:
        type: "string"
        format: "uuid"
      childAccountId:
        type: "string"
        format: "uuid"
      bundleId:
        type: "string"
        format: "uuid"
      subscriptionId:
        type: "string"
        format: "uuid"
      productName:
        type: "string"
      planName:
        type: "string"
      phaseName:
        type: "string"
      usageName:
        type: "string"
      prettyProductName:
        type: "string"
      prettyPlanName:
        type: "string"
      prettyPhaseName:
        type: "string"
      prettyUsageName:
        type: "string"
      itemType:
        type: "string"
        enum:
        - "EXTERNAL_CHARGE"
        - "FIXED"
        - "RECURRING"
        - "REPAIR_ADJ"
        - "CBA_ADJ"
        - "CREDIT_ADJ"
        - "ITEM_ADJ"
        - "USAGE"
        - "TAX"
        - "PARENT_SUMMARY"
      description:
        type: "string"
      startDate:
        type: "string"
        format: "date"
      endDate:
        type: "string"
        format: "date"
      amount:
        type: "number"
      rate:
        type: "number"
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      quantity:
        type: "number"
      itemDetails:
        type: "string"
      catalogEffectiveDate:
        type: "string"
        format: "date-time"
      childItems:
        type: "array"
        items:
          $ref: "#/definitions/InvoiceItem"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  OverdueState:
    type: "object"
    properties:
      name:
        type: "string"
      externalMessage:
        type: "string"
      isDisableEntitlementAndChangesBlocked:
        type: "boolean"
      isBlockChanges:
        type: "boolean"
      isClearState:
        type: "boolean"
      reevaluationIntervalDays:
        type: "integer"
        format: "int32"
  Payment:
    type: "object"
    properties:
      accountId:
        type: "string"
        format: "uuid"
      paymentId:
        type: "string"
        format: "uuid"
      paymentNumber:
        type: "string"
      paymentExternalKey:
        type: "string"
      authAmount:
        type: "number"
      capturedAmount:
        type: "number"
      purchasedAmount:
        type: "number"
      refundedAmount:
        type: "number"
      creditedAmount:
        type: "number"
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      paymentMethodId:
        type: "string"
        format: "uuid"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/PaymentTransaction"
      paymentAttempts:
        type: "array"
        items:
          $ref: "#/definitions/PaymentAttempt"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  AdminPayment:
    type: "object"
    properties:
      lastSuccessPaymentState:
        type: "string"
      currentPaymentStateName:
        type: "string"
      transactionStatus:
        type: "string"
  SimplePlan:
    type: "object"
    properties:
      planId:
        type: "string"
      productName:
        type: "string"
      productCategory:
        type: "string"
        enum:
        - "BASE"
        - "ADD_ON"
        - "STANDALONE"
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      amount:
        type: "number"
      billingPeriod:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "BIWEEKLY"
        - "THIRTY_DAYS"
        - "SIXTY_DAYS"
        - "NINETY_DAYS"
        - "MONTHLY"
        - "BIMESTRIAL"
        - "QUARTERLY"
        - "TRIANNUAL"
        - "BIANNUAL"
        - "ANNUAL"
        - "BIENNIAL"
        - "NO_BILLING_PERIOD"
      trialLength:
        type: "integer"
        format: "int32"
      trialTimeUnit:
        type: "string"
        enum:
        - "DAYS"
        - "WEEKS"
        - "MONTHS"
        - "YEARS"
        - "UNLIMITED"
      availableBaseProducts:
        type: "array"
        items:
          type: "string"
  PlanDetail:
    type: "object"
    properties:
      product:
        type: "string"
      plan:
        type: "string"
      priceList:
        type: "string"
      finalPhaseBillingPeriod:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "BIWEEKLY"
        - "THIRTY_DAYS"
        - "SIXTY_DAYS"
        - "NINETY_DAYS"
        - "MONTHLY"
        - "BIMESTRIAL"
        - "QUARTERLY"
        - "TRIANNUAL"
        - "BIANNUAL"
        - "ANNUAL"
        - "BIENNIAL"
        - "NO_BILLING_PERIOD"
      finalPhaseRecurringPrice:
        type: "array"
        items:
          $ref: "#/definitions/Price"
  Price:
    type: "object"
    properties:
      currency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      value:
        type: "number"
  Catalog:
    type: "object"
    properties:
      name:
        type: "string"
      effectiveDate:
        type: "string"
        format: "date-time"
      currencies:
        type: "array"
        items:
          type: "string"
          enum:
          - "AED"
          - "AFN"
          - "ALL"
          - "AMD"
          - "ANG"
          - "AOA"
          - "ARS"
          - "AUD"
          - "AWG"
          - "AZN"
          - "BAM"
          - "BBD"
          - "BDT"
          - "BGN"
          - "BHD"
          - "BIF"
          - "BMD"
          - "BND"
          - "BOB"
          - "BRL"
          - "BSD"
          - "BTN"
          - "BWP"
          - "BYR"
          - "BZD"
          - "CAD"
          - "CDF"
          - "CHF"
          - "CLP"
          - "CNY"
          - "COP"
          - "CRC"
          - "CUC"
          - "CUP"
          - "CVE"
          - "CZK"
          - "DJF"
          - "DKK"
          - "DOP"
          - "DZD"
          - "EGP"
          - "ERN"
          - "ETB"
          - "EUR"
          - "FJD"
          - "FKP"
          - "GBP"
          - "GEL"
          - "GGP"
          - "GHS"
          - "GIP"
          - "GMD"
          - "GNF"
          - "GTQ"
          - "GYD"
          - "HKD"
          - "HNL"
          - "HRK"
          - "HTG"
          - "HUF"
          - "IDR"
          - "ILS"
          - "IMP"
          - "INR"
          - "IQD"
          - "IRR"
          - "ISK"
          - "JEP"
          - "JMD"
          - "JOD"
          - "JPY"
          - "KES"
          - "KGS"
          - "KHR"
          - "KMF"
          - "KPW"
          - "KRW"
          - "KWD"
          - "KYD"
          - "KZT"
          - "LAK"
          - "LBP"
          - "LKR"
          - "LRD"
          - "LSL"
          - "LTL"
          - "LVL"
          - "LYD"
          - "MAD"
          - "MDL"
          - "MGA"
          - "MKD"
          - "MMK"
          - "MNT"
          - "MOP"
          - "MRO"
          - "MUR"
          - "MVR"
          - "MWK"
          - "MXN"
          - "MYR"
          - "MZN"
          - "NAD"
          - "NGN"
          - "NIO"
          - "NOK"
          - "NPR"
          - "NZD"
          - "OMR"
          - "PAB"
          - "PEN"
          - "PGK"
          - "PHP"
          - "PKR"
          - "PLN"
          - "PYG"
          - "QAR"
          - "RON"
          - "RSD"
          - "RUB"
          - "RWF"
          - "SAR"
          - "SBD"
          - "SCR"
          - "SDG"
          - "SEK"
          - "SGD"
          - "SHP"
          - "SLL"
          - "SOS"
          - "SPL"
          - "SRD"
          - "STD"
          - "SVC"
          - "SYP"
          - "SZL"
          - "THB"
          - "TJS"
          - "TMT"
          - "TND"
          - "TOP"
          - "TRY"
          - "TTD"
          - "TVD"
          - "TWD"
          - "TZS"
          - "UAH"
          - "UGX"
          - "USD"
          - "UYU"
          - "UZS"
          - "VEF"
          - "VND"
          - "VUV"
          - "WST"
          - "XAF"
          - "XCD"
          - "XDR"
          - "XOF"
          - "XPF"
          - "YER"
          - "ZAR"
          - "ZMW"
          - "ZWD"
          - "BTC"
      units:
        type: "array"
        items:
          $ref: "#/definitions/Unit"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"
      priceLists:
        type: "array"
        items:
          $ref: "#/definitions/PriceList"
  Duration:
    type: "object"
    properties:
      unit:
        type: "string"
        enum:
        - "DAYS"
        - "WEEKS"
        - "MONTHS"
        - "YEARS"
        - "UNLIMITED"
      number:
        type: "integer"
        format: "int32"
  Limit:
    type: "object"
    properties:
      unit:
        type: "string"
      max:
        type: "string"
      min:
        type: "string"
  Phase:
    type: "object"
    properties:
      type:
        type: "string"
      prices:
        type: "array"
        items:
          $ref: "#/definitions/Price"
      fixedPrices:
        type: "array"
        items:
          $ref: "#/definitions/Price"
      duration:
        $ref: "#/definitions/Duration"
      usages:
        type: "array"
        items:
          $ref: "#/definitions/Usage"
  Plan:
    type: "object"
    properties:
      name:
        type: "string"
      prettyName:
        type: "string"
      recurringBillingMode:
        type: "string"
        enum:
        - "IN_ADVANCE"
        - "IN_ARREAR"
      billingPeriod:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "BIWEEKLY"
        - "THIRTY_DAYS"
        - "SIXTY_DAYS"
        - "NINETY_DAYS"
        - "MONTHLY"
        - "BIMESTRIAL"
        - "QUARTERLY"
        - "TRIANNUAL"
        - "BIANNUAL"
        - "ANNUAL"
        - "BIENNIAL"
        - "NO_BILLING_PERIOD"
      phases:
        type: "array"
        items:
          $ref: "#/definitions/Phase"
  PriceList:
    type: "object"
    properties:
      name:
        type: "string"
      plans:
        type: "array"
        items:
          type: "string"
  Product:
    type: "object"
    properties:
      type:
        type: "string"
      name:
        type: "string"
      prettyName:
        type: "string"
      plans:
        type: "array"
        items:
          $ref: "#/definitions/Plan"
      included:
        type: "array"
        items:
          type: "string"
      available:
        type: "array"
        items:
          type: "string"
  Tier:
    type: "object"
    properties:
      limits:
        type: "array"
        items:
          $ref: "#/definitions/Limit"
      fixedPrice:
        type: "array"
        items:
          $ref: "#/definitions/Price"
      recurringPrice:
        type: "array"
        items:
          $ref: "#/definitions/Price"
      blocks:
        type: "array"
        items:
          $ref: "#/definitions/TieredBlock"
  TieredBlock:
    type: "object"
    properties:
      unit:
        type: "string"
      size:
        type: "string"
      max:
        type: "string"
      prices:
        type: "array"
        items:
          $ref: "#/definitions/Price"
  Unit:
    type: "object"
    properties:
      name:
        type: "string"
      prettyName:
        type: "string"
  Usage:
    type: "object"
    properties:
      billingPeriod:
        type: "string"
      tiers:
        type: "array"
        items:
          $ref: "#/definitions/Tier"
  InvoicePaymentTransaction:
    type: "object"
    properties:
      transactionId:
        type: "string"
        format: "uuid"
      transactionExternalKey:
        type: "string"
      paymentId:
        type: "string"
        format: "uuid"
        description: "Associated payment id, required when notifying state transitions"
      paymentExternalKey:
        type: "string"
      transactionType:
        type: "string"
        enum:
        - "AUTHORIZE"
        - "CAPTURE"
        - "CHARGEBACK"
        - "CREDIT"
        - "PURCHASE"
        - "REFUND"
        - "VOID"
      amount:
        type: "number"
        description: "Transaction amount, required except for void operations"
      currency:
        type: "string"
        description: "Amount currency (account currency unless specified)"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      effectiveDate:
        type: "string"
        format: "date-time"
      processedAmount:
        type: "number"
      processedCurrency:
        type: "string"
        enum:
        - "AED"
        - "AFN"
        - "ALL"
        - "AMD"
        - "ANG"
        - "AOA"
        - "ARS"
        - "AUD"
        - "AWG"
        - "AZN"
        - "BAM"
        - "BBD"
        - "BDT"
        - "BGN"
        - "BHD"
        - "BIF"
        - "BMD"
        - "BND"
        - "BOB"
        - "BRL"
        - "BSD"
        - "BTN"
        - "BWP"
        - "BYR"
        - "BZD"
        - "CAD"
        - "CDF"
        - "CHF"
        - "CLP"
        - "CNY"
        - "COP"
        - "CRC"
        - "CUC"
        - "CUP"
        - "CVE"
        - "CZK"
        - "DJF"
        - "DKK"
        - "DOP"
        - "DZD"
        - "EGP"
        - "ERN"
        - "ETB"
        - "EUR"
        - "FJD"
        - "FKP"
        - "GBP"
        - "GEL"
        - "GGP"
        - "GHS"
        - "GIP"
        - "GMD"
        - "GNF"
        - "GTQ"
        - "GYD"
        - "HKD"
        - "HNL"
        - "HRK"
        - "HTG"
        - "HUF"
        - "IDR"
        - "ILS"
        - "IMP"
        - "INR"
        - "IQD"
        - "IRR"
        - "ISK"
        - "JEP"
        - "JMD"
        - "JOD"
        - "JPY"
        - "KES"
        - "KGS"
        - "KHR"
        - "KMF"
        - "KPW"
        - "KRW"
        - "KWD"
        - "KYD"
        - "KZT"
        - "LAK"
        - "LBP"
        - "LKR"
        - "LRD"
        - "LSL"
        - "LTL"
        - "LVL"
        - "LYD"
        - "MAD"
        - "MDL"
        - "MGA"
        - "MKD"
        - "MMK"
        - "MNT"
        - "MOP"
        - "MRO"
        - "MUR"
        - "MVR"
        - "MWK"
        - "MXN"
        - "MYR"
        - "MZN"
        - "NAD"
        - "NGN"
        - "NIO"
        - "NOK"
        - "NPR"
        - "NZD"
        - "OMR"
        - "PAB"
        - "PEN"
        - "PGK"
        - "PHP"
        - "PKR"
        - "PLN"
        - "PYG"
        - "QAR"
        - "RON"
        - "RSD"
        - "RUB"
        - "RWF"
        - "SAR"
        - "SBD"
        - "SCR"
        - "SDG"
        - "SEK"
        - "SGD"
        - "SHP"
        - "SLL"
        - "SOS"
        - "SPL"
        - "SRD"
        - "STD"
        - "SVC"
        - "SYP"
        - "SZL"
        - "THB"
        - "TJS"
        - "TMT"
        - "TND"
        - "TOP"
        - "TRY"
        - "TTD"
        - "TVD"
        - "TWD"
        - "TZS"
        - "UAH"
        - "UGX"
        - "USD"
        - "UYU"
        - "UZS"
        - "VEF"
        - "VND"
        - "VUV"
        - "WST"
        - "XAF"
        - "XCD"
        - "XDR"
        - "XOF"
        - "XPF"
        - "YER"
        - "ZAR"
        - "ZMW"
        - "ZWD"
        - "BTC"
      status:
        type: "string"
        description: "Transaction status, required for state change notifications"
        enum:
        - "SUCCESS"
        - "UNKNOWN"
        - "PENDING"
        - "PAYMENT_FAILURE"
        - "PLUGIN_FAILURE"
        - "PAYMENT_SYSTEM_OFF"
      gatewayErrorCode:
        type: "string"
      gatewayErrorMsg:
        type: "string"
      firstPaymentReferenceId:
        type: "string"
      secondPaymentReferenceId:
        type: "string"
      properties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
      isAdjusted:
        type: "boolean"
      adjustments:
        type: "array"
        items:
          $ref: "#/definitions/InvoiceItem"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  InvoiceDryRun:
    type: "object"
    properties:
      dryRunType:
        type: "string"
        enum:
        - "TARGET_DATE"
        - "UPCOMING_INVOICE"
        - "SUBSCRIPTION_ACTION"
      dryRunAction:
        type: "string"
        enum:
        - "START_ENTITLEMENT"
        - "START_BILLING"
        - "PAUSE_ENTITLEMENT"
        - "PAUSE_BILLING"
        - "RESUME_ENTITLEMENT"
        - "RESUME_BILLING"
        - "PHASE"
        - "CHANGE"
        - "STOP_ENTITLEMENT"
        - "STOP_BILLING"
        - "SERVICE_STATE_CHANGE"
      phaseType:
        type: "string"
        enum:
        - "TRIAL"
        - "DISCOUNT"
        - "FIXEDTERM"
        - "EVERGREEN"
      productName:
        type: "string"
      productCategory:
        type: "string"
        enum:
        - "BASE"
        - "ADD_ON"
        - "STANDALONE"
      billingPeriod:
        type: "string"
        enum:
        - "DAILY"
        - "WEEKLY"
        - "BIWEEKLY"
        - "THIRTY_DAYS"
        - "SIXTY_DAYS"
        - "NINETY_DAYS"
        - "MONTHLY"
        - "BIMESTRIAL"
        - "QUARTERLY"
        - "TRIANNUAL"
        - "BIANNUAL"
        - "ANNUAL"
        - "BIENNIAL"
        - "NO_BILLING_PERIOD"
      priceListName:
        type: "string"
      subscriptionId:
        type: "string"
        format: "uuid"
      bundleId:
        type: "string"
        format: "uuid"
      effectiveDate:
        type: "string"
        format: "date"
      billingPolicy:
        type: "string"
        enum:
        - "START_OF_TERM"
        - "END_OF_TERM"
        - "IMMEDIATE"
        - "ILLEGAL"
      priceOverrides:
        type: "array"
        items:
          $ref: "#/definitions/PhasePrice"
  PluginInfo:
    type: "object"
    properties:
      bundleSymbolicName:
        type: "string"
      pluginKey:
        type: "string"
      pluginName:
        type: "string"
      version:
        type: "string"
      state:
        type: "string"
      isSelectedForStart:
        type: "boolean"
      services:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/PluginServiceInfo"
  PluginServiceInfo:
    type: "object"
    properties:
      serviceTypeName:
        type: "string"
      registrationName:
        type: "string"
  NodeCommand:
    type: "object"
    properties:
      isSystemCommandType:
        type: "boolean"
      nodeCommandType:
        type: "string"
      nodeCommandProperties:
        type: "array"
        items:
          $ref: "#/definitions/NodeCommandProperty"
  NodeCommandProperty:
    type: "object"
    properties:
      key:
        type: "string"
      value:
        type: "object"
  Overdue:
    type: "object"
    properties:
      initialReevaluationInterval:
        type: "integer"
        format: "int32"
      overdueStates:
        type: "array"
        items:
          $ref: "#/definitions/OverdueStateConfig"
  OverdueCondition:
    type: "object"
    properties:
      timeSinceEarliestUnpaidInvoiceEqualsOrExceeds:
        $ref: "#/definitions/Duration"
      controlTagInclusion:
        type: "string"
        enum:
        - "AUTO_PAY_OFF"
        - "AUTO_INVOICING_OFF"
        - "OVERDUE_ENFORCEMENT_OFF"
        - "WRITTEN_OFF"
        - "MANUAL_PAY"
        - "TEST"
        - "PARTNER"
        - "AUTO_INVOICING_DRAFT"
        - "AUTO_INVOICING_REUSE_DRAFT"
      controlTagExclusion:
        type: "string"
        enum:
        - "AUTO_PAY_OFF"
        - "AUTO_INVOICING_OFF"
        - "OVERDUE_ENFORCEMENT_OFF"
        - "WRITTEN_OFF"
        - "MANUAL_PAY"
        - "TEST"
        - "PARTNER"
        - "AUTO_INVOICING_DRAFT"
        - "AUTO_INVOICING_REUSE_DRAFT"
      numberOfUnpaidInvoicesEqualsOrExceeds:
        type: "integer"
        format: "int32"
      responseForLastFailedPayment:
        type: "array"
        items:
          type: "string"
          enum:
          - "INVALID_CARD"
          - "EXPIRED_CARD"
          - "LOST_OR_STOLEN_CARD"
          - "DO_NOT_HONOR"
          - "INSUFFICIENT_FUNDS"
          - "DECLINE"
          - "PROCESSING_ERROR"
          - "INVALID_AMOUNT"
          - "DUPLICATE_TRANSACTION"
          - "OTHER"
      totalUnpaidInvoiceBalanceEqualsOrExceeds:
        type: "number"
  OverdueStateConfig:
    type: "object"
    properties:
      name:
        type: "string"
      isClearState:
        type: "boolean"
      condition:
        $ref: "#/definitions/OverdueCondition"
      externalMessage:
        type: "string"
      isBlockChanges:
        type: "boolean"
      isDisableEntitlement:
        type: "boolean"
      subscriptionCancellationPolicy:
        type: "string"
        enum:
        - "END_OF_TERM"
        - "IMMEDIATE"
        - "NONE"
      autoReevaluationIntervalDays:
        type: "integer"
        format: "int32"
  HostedPaymentPageFormDescriptor:
    type: "object"
    properties:
      kbAccountId:
        type: "string"
        format: "uuid"
      formMethod:
        type: "string"
      formUrl:
        type: "string"
      formFields:
        type: "object"
        additionalProperties:
          type: "object"
      properties:
        type: "object"
        additionalProperties:
          type: "object"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  HostedPaymentPageFields:
    type: "object"
    properties:
      formFields:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
  ComboHostedPaymentPage:
    type: "object"
    properties:
      account:
        $ref: "#/definitions/Account"
      paymentMethod:
        $ref: "#/definitions/PaymentMethod"
      hostedPaymentPageFields:
        $ref: "#/definitions/HostedPaymentPageFields"
      paymentMethodPluginProperties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  ComboPaymentTransaction:
    type: "object"
    properties:
      account:
        $ref: "#/definitions/Account"
      paymentMethod:
        $ref: "#/definitions/PaymentMethod"
      transaction:
        $ref: "#/definitions/PaymentTransaction"
      paymentMethodPluginProperties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
      transactionPluginProperties:
        type: "array"
        items:
          $ref: "#/definitions/PluginProperty"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  UserRoles:
    type: "object"
    required:
    - "password"
    - "roles"
    - "username"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      roles:
        type: "array"
        items:
          type: "string"
  RoleDefinition:
    type: "object"
    required:
    - "permissions"
    - "role"
    properties:
      role:
        type: "string"
      permissions:
        type: "array"
        items:
          type: "string"
  Session:
    type: "object"
    properties:
      id:
        type: "string"
      startDate:
        type: "string"
        format: "date-time"
      lastAccessDate:
        type: "string"
        format: "date-time"
      timeout:
        type: "integer"
        format: "int64"
      host:
        type: "string"
  Subject:
    type: "object"
    properties:
      principal:
        type: "string"
      isAuthenticated:
        type: "boolean"
      isRemembered:
        type: "boolean"
      session:
        $ref: "#/definitions/Session"
  BulkSubscriptionsBundle:
    type: "object"
    required:
    - "baseEntitlementAndAddOns"
    properties:
      baseEntitlementAndAddOns:
        type: "array"
        items:
          $ref: "#/definitions/Subscription"
  TagDefinition:
    type: "object"
    required:
    - "description"
    - "name"
    properties:
      id:
        type: "string"
        format: "uuid"
      isControlTag:
        type: "boolean"
      name:
        type: "string"
      description:
        type: "string"
      applicableObjectTypes:
        type: "array"
        uniqueItems: true
        items:
          type: "string"
          enum:
          - "ACCOUNT"
          - "ACCOUNT_EMAIL"
          - "BLOCKING_STATES"
          - "BUNDLE"
          - "CUSTOM_FIELD"
          - "INVOICE"
          - "PAYMENT"
          - "TRANSACTION"
          - "INVOICE_ITEM"
          - "INVOICE_PAYMENT"
          - "SUBSCRIPTION"
          - "SUBSCRIPTION_EVENT"
          - "SERVICE_BROADCAST"
          - "PAYMENT_ATTEMPT"
          - "PAYMENT_METHOD"
          - "TAG"
          - "TAG_DEFINITION"
          - "TENANT"
          - "TENANT_KVS"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  Tenant:
    type: "object"
    required:
    - "apiKey"
    - "apiSecret"
    properties:
      tenantId:
        type: "string"
        format: "uuid"
      externalKey:
        type: "string"
      apiKey:
        type: "string"
      apiSecret:
        type: "string"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  TenantKeyValue:
    type: "object"
    properties:
      key:
        type: "string"
      values:
        type: "array"
        items:
          type: "string"
      auditLogs:
        type: "array"
        items:
          $ref: "#/definitions/AuditLog"
  RolledUpUnit:
    type: "object"
    properties:
      unitType:
        type: "string"
      amount:
        type: "number"
  RolledUpUsage:
    type: "object"
    properties:
      subscriptionId:
        type: "string"
        format: "uuid"
      startDate:
        type: "string"
        format: "date-time"
      endDate:
        type: "string"
        format: "date-time"
      rolledUpUnits:
        type: "array"
        items:
          $ref: "#/definitions/RolledUpUnit"
  SubscriptionUsageRecord:
    type: "object"
    required:
    - "subscriptionId"
    - "unitUsageRecords"
    properties:
      subscriptionId:
        type: "string"
        format: "uuid"
      trackingId:
        type: "string"
      unitUsageRecords:
        type: "array"
        items:
          $ref: "#/definitions/UnitUsageRecord"
  UnitUsageRecord:
    type: "object"
    properties:
      unitType:
        type: "string"
      usageRecords:
        type: "array"
        items:
          $ref: "#/definitions/UsageRecord"
  UsageRecord:
    type: "object"
    properties:
      recordDate:
        type: "string"
        format: "date-time"
      amount:
        type: "number"
